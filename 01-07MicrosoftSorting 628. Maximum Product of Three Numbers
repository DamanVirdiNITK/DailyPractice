####1st Method
Brute Force
Find all the triplets and then max of all
Time Complexity O(n3)
Space Complexity O(1)


####2nd Method
SORT the array/list. Two possibilites of MAX product is : all 3 greatest positive or 2 least and one max positive

class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        nums.sort()
        return max(nums[0]*nums[1]*nums[-1] , nums[-1]*nums[-2]*nums[-3] )
        
Time Complexity O(nlogn)   (for Sorting)
Space Complexity O(logn)   (for Sorting)


###3rd Method : Instead of sorting. Find all 2 smallest and 3 largest numbers using HEAP and then find max as in prev method

class Solution:
    def maximumProduct(self, nums: List[int]) -> int:
        a,b = heapq.nlargest(3,nums) , heapq.nsmallest(2,nums)
        return max(a[0]*a[1]*a[2], a[0]*b[0]*b[1])
        

Time Complexity O(n)    =O(nlog3)  (for Sorting)
Space Complexity ??
        


###4rd Method
Instead of sorting. Find all 2 smallest and 3 largest numbers in SINGLE SCAN and then find max as in prev method

##In progress

        
        
  
        
